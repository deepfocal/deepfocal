# Generated by Django 5.2.6 on 2025-09-18 14:23

import django.db.models.deletion
from django.db import migrations, models


def move_competitor_data_forward(apps, schema_editor):
    CompetitorApp = apps.get_model('reviews', 'CompetitorApp')
    Competitor = apps.get_model('reviews', 'Competitor')
    CompetitorPlatform = apps.get_model('reviews', 'CompetitorPlatform')

    for competitor_app in CompetitorApp.objects.select_related('project').order_by('project_id', 'app_name', 'id'):
        display_name = (competitor_app.app_name or '').strip() or competitor_app.app_id

        competitor, created = Competitor.objects.get_or_create(
            project_id=competitor_app.project_id,
            display_name=display_name,
            defaults={'primary_app_id': competitor_app.app_id},
        )

        if not competitor.primary_app_id:
            competitor.primary_app_id = competitor_app.app_id
            competitor.save(update_fields=['primary_app_id', 'updated_at'])

        platform_code = 'android' if '.' in (competitor_app.app_id or '') else 'ios'

        if CompetitorPlatform.objects.filter(competitor=competitor, app_id=competitor_app.app_id).exists():
            continue

        platform_kwargs = {
            'competitor': competitor,
            'platform': platform_code,
            'app_id': competitor_app.app_id,
            'app_name': competitor_app.app_name,
        }

        added_at = getattr(competitor_app, 'added_at', None)
        if added_at:
            platform_kwargs['added_at'] = added_at

        last_refreshed = getattr(competitor_app, 'last_refreshed', None)
        if last_refreshed:
            platform_kwargs['last_refreshed'] = last_refreshed

        CompetitorPlatform.objects.create(**platform_kwargs)


def move_competitor_data_backward(apps, schema_editor):
    CompetitorApp = apps.get_model('reviews', 'CompetitorApp')
    Competitor = apps.get_model('reviews', 'Competitor')
    CompetitorPlatform = apps.get_model('reviews', 'CompetitorPlatform')

    for competitor in Competitor.objects.all():
        for platform in CompetitorPlatform.objects.filter(competitor=competitor):
            app_kwargs = {
                'project_id': competitor.project_id,
                'app_id': platform.app_id,
                'app_name': platform.app_name,
            }

            added_at = getattr(platform, 'added_at', None)
            if added_at:
                app_kwargs['added_at'] = added_at

            last_refreshed = getattr(platform, 'last_refreshed', None)
            if last_refreshed:
                app_kwargs['last_refreshed'] = last_refreshed

            CompetitorApp.objects.create(**app_kwargs)


class Migration(migrations.Migration):

    dependencies = [
        ('reviews', '0008_tasktracker'),
    ]

    operations = [
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(max_length=200)),
                ('primary_app_id', models.CharField(blank=True, default='', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='competitors', to='reviews.project')),
            ],
            options={
                'unique_together': {('project', 'display_name')},
            },
        ),
        migrations.CreateModel(
            name='CompetitorPlatform',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('ios', 'iOS'), ('android', 'Android')], max_length=20)),
                ('app_id', models.CharField(max_length=255)),
                ('app_name', models.CharField(max_length=200)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('last_refreshed', models.DateTimeField(blank=True, help_text='When reviews were last fetched for this platform variant', null=True)),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='platforms', to='reviews.competitor')),
            ],
            options={
                'unique_together': {('competitor', 'app_id'), ('competitor', 'platform')},
            },
        ),
        migrations.RunPython(move_competitor_data_forward, move_competitor_data_backward),
        migrations.DeleteModel(
            name='CompetitorApp',
        ),
    ]
